/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState, useContext } from "react";
import { Instance, Html, useAspect } from "@react-three/drei";
import { useFrame, useLoader } from "@react-three/fiber";
import * as THREE from "three";
import { GridContext } from "../../Contexts/GridContext";
import { toRadians } from "../../lib/helpers/math";
import { changeCursorOnHover } from "../../lib/helpers/cursor";



export function ExpoBooth2(props) {
  const ref = useRef();
  const [hovered, hover] = useState(false);
  const texture = useLoader(THREE.TextureLoader, props.image)
  const { width, height } = useAspect('cover', texture.image.width, texture.image.height, 2);

  useFrame(()=> {
    ref.current.color = hovered ? new THREE.Color("indianred") : new THREE.Color("white");
    changeCursorOnHover(hovered);
  },[]);


  return (
    <group {...props} dispose={null}>
      {/* {hovered && <Html>
        <div className={`content ${hovered && "active"}`} >
          <div className="name">{props.label}</div>
          <div className="sector">{props.sectorId}</div>
        </div>
      </Html>} */}
      <group position={[2.26, 4.3377, -4.031]} rotation={[toRadians(180), toRadians(0), toRadians(180)]}>
        <mesh scale={[3,  1, 1]} >
          <planeGeometry receiveShadow attach="geometry" args={[width, height]}  />
          <meshBasicMaterial attach="material" map={texture} />
        </mesh>
      </group>

      <Instance ref={ref} castShadow receiveShadow  rotation={[toRadians(90),0,toRadians(180)]}
        onPointerOver={(event) => hover(true)}
        onPointerOut={(event) => hover(false)}
      />
    </group>
  );
}


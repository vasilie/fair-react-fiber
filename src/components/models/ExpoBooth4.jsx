/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useMemo, useContext, createContext } from "react";
import { useGLTF, Merged } from "@react-three/drei";
import * as THREE from "three";

import modelPath from "./blender/expoBooth4.glb";
import { Color } from "three";
const context = createContext();
const redMaterial = new THREE.MeshBasicMaterial({ color: new Color("red") });
export function Instances({ children, ...props }) {
  const { nodes } = useGLTF(modelPath);
  const instances = useMemo(
    () => ({
      Geo: nodes.geo1,
      Geo1: nodes.geo1_1,
    }),
    [nodes]
  );
  return (
    <Merged meshes={instances} {...props}>
      {(instances) => (
        <context.Provider value={instances} children={children} />
      )}
    </Merged>
  );
}

export function ExpoBoothModel4(props) {
  const instances = useContext(context);
  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
        <instances.Geo color="white" > </instances.Geo>
        <instances.Geo1 />
      </group>
    </group>
  );
}

useGLTF.preload(modelPath);